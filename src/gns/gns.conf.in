[gns]
AUTOSTART = @AUTOSTART@
FORCESTART = YES
HOSTNAME = localhost
BINARY = gnunet-service-gns
UNIXPATH = $GNUNET_USER_RUNTIME_DIR/gnunet-service-gns.sock
@JAVAPORT@PORT = 2102
USER_SERVICE = YES

# Do we require users that want to access GNS to run this process
# (usually not a good idea)
UNIX_MATCH_UID = NO

# Do we require users that want to access GNS to be in the 'gnunet' group?
UNIX_MATCH_GID = YES

# How many queries is GNS allowed to perform in the background at the same time?
MAX_PARALLEL_BACKGROUND_QUERIES = 1000

# How frequently do we try to publish our full zone?
ZONE_PUBLISH_TIME_WINDOW = 4 h

# Using caching or always ask DHT
# USE_CACHE = YES

# PREFIX = valgrind --leak-check=full --track-origins=yes

# Setting this option enables hijacking DNS queries using iptables.
# DNS_ROOT = KEY

[gns-proxy]
BINARY = gnunet-gns-proxy
AUTOSTART = NO
USER_SERVICE = YES

# Where is the certificate for the GNS proxy stored?
PROXY_CACERT = $GNUNET_DATA_HOME/gns/gns_ca_cert.pem
PROXY_UNIXPATH = $GNUNET_RUNTIME_DIR/gnunet-gns-proxy.sock


[dns2gns]
BINARY = gnunet-dns2gns
AUTOSTART = NO
USER_SERVICE = YES

# -d: DNS resolver to use, -s: suffix to use, -f: fcfs suffix to use
OPTIONS = -d 8.8.8.8
