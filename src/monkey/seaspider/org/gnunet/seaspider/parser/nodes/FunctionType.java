//
// Generated by JTB 1.3.2
//

package org.gnunet.seaspider.parser.nodes;

/**
 * Grammar production:
 * <PRE>
 * f0 -> TypeSpecifier()
 * f1 -> "("
 * f2 -> "*"
 * f3 -> &lt;IDENTIFIER&gt;
 * f4 -> ")"
 * f5 -> "("
 * f6 -> [ ParameterList() ]
 * f7 -> ")"
 * </PRE>
 */
public class FunctionType implements Node {
   public TypeSpecifier f0;
   public NodeToken f1;
   public NodeToken f2;
   public NodeToken f3;
   public NodeToken f4;
   public NodeToken f5;
   public NodeOptional f6;
   public NodeToken f7;

   public FunctionType(TypeSpecifier n0, NodeToken n1, NodeToken n2, NodeToken n3, NodeToken n4, NodeToken n5, NodeOptional n6, NodeToken n7) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
   }

   public FunctionType(TypeSpecifier n0, NodeToken n1, NodeOptional n2) {
      f0 = n0;
      f1 = new NodeToken("(");
      f2 = new NodeToken("*");
      f3 = n1;
      f4 = new NodeToken(")");
      f5 = new NodeToken("(");
      f6 = n2;
      f7 = new NodeToken(")");
   }

   public void accept(org.gnunet.seaspider.parser.visitors.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(org.gnunet.seaspider.parser.visitors.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(org.gnunet.seaspider.parser.visitors.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(org.gnunet.seaspider.parser.visitors.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

