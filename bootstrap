#!/bin/sh
# This file is in the public domain.
echo "Removing folder 'libltdl'..."
rm -rf libltdl

echo "checking for libtoolize / libtool... "

# This is more portable than `which' but comes with
# the caveat of not(?) properly working on busybox's ash:
existence()
{
    command -v "$1" >/dev/null 2>&1
}

if existence libtool || existence libtoolize || existence glibtoolize; then
    autoreconf -if
    . "bin/pogen.sh"
else
    echo "*** No libtoolize (libtool) or libtool found, please install it ***" >&2;
    exit 1
fi

# autotools is being incredible stupid with multiple python versions
# what we do here is check for a functional python 2.7 which reports
# back to be a real python 2.7, then later on sed the location in
# the only python 2.7 file we keep around
# the rest of the build system can then be happy detecting 3.7 or
# higher
# this checks a range of names which is as annoying as what autotools
# is doing
# Since everything we could try is do too much work, we will assume
# that python2 OR python2.7 are the names for python 2.7.
# If your system diverges, please sed it accordingly!
echo "save python 2.7 location into src/util/python27_location"
#if existence python2 || existence python2.7; then
#	echo command -v
python_version()
{
	"$1" -c "print(__import__('sys').version)" | grep -Z "2.7" | cut -c1-3
}

if existence python; then
    if [ ! -z "${python_version} python" ]; then
	loc1=$(command -v python)
	echo "$loc1" >./src/util/python27_location
    fi
elif existence python2; then
    if [ ! -z "${python_version} python2" ]; then
	loc2=$(command -v python2)
	echo "$loc2" >./src/util/python27_location
    fi
elif existence python2.7; then
    if [ ! -z "${python_version} python2.7" ]; then
	loc3=$(command -v python2.7)
	echo "$loc3" >./src/util/python27_location
    fi
else
    echo "*** No python 2.7 binary found, please install it" >&2
    echo "*** for the optional gnunet-qr to work." >&2
    echo "*** Make sure to install a matching python future module." >&2
fi 
