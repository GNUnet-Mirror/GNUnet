.TH GNUNET\-VECTORPRODUCT 1 "8 Aug 2013" "GNUnet"

.SH NAME
gnunet\-vectorproduct \- compute a vectorproduct

.SH SYNOPSIS
.B gnunet\-vectorproduct
.RI [ options ]
.br

.SH DESCRIPTION
\fBgnunet-vectorproduct\fP enables you to compute a vectorproduct across two peers \fBAlice\fP and \fBBob\fP.

A client can issue one of two messages to its service:
.TS
tab (@);
l lx.
1@T{
A request to compute a vectorproduct with another peer (\fBAlice\fP)
T}
2@T{
Elements to support a peer in computing a vectorproduct (\fBBob\fP)
T}
.TE

Both requests must share the same SID, which can be an arbitrary string identifying the session. SIDs should be unique, however it is sufficient to guarantee the uniqueness of the tupel element count and session ID.

\fBAlice\fP\'s client must supply the ASCII encoded peer ID of bob\'s service, it will internally be checked by the client for validity. Invalid values here result in the client or the service failing the session.

Elements are handed over as signed decimal integers, the element count supplied by \fBAlice\fP and \fBBob\fP must match. \fBAlice\fP can also supply a mask for these values to her service, which allows partial vector products to be computed across the vector. Elements can be masked by setting their the corresponding mask element to zero, any other value means the element will not be masked. \fBAlice\fP\'s client will also mask all 0-values to avoid information leakage to \fBBob\fP.

The protocol by definition relies on \fBAlice\fP and \fBBob\fP being benign, thus \fBBob\fP can arbitrarily falsify his information. Both peers collaborate to achieve a correct result.

.SH OPTIONS
.B
.IP "\-e ELEMENTS, \-\-elements=ELEMENTS"
The element-vector the vectorproduct should be computed over in signed decimal form, eg: \"42,1,-3,3,7\". Zero value elements will be automatically masked.
.B
.IP "\-m MASK, \-\-mask=MASK"
Elements in the vector can be masked. There must be at least two elements left in the vector to compute a vectorproduct. Non-Zero values indicate an element is not maskes.
.B
.IP "\-k KEY, \-\-key=KEY"
The session key, a shared string of arbitrary length from which the SID will be generated
.B
.IP "\-c FILENAME,  \-\-config=FILENAME"
Use the configuration file FILENAME.
.B
.IP "\-p PEERID, \-\-peer=PEERID"
The remote peer\'s ASCII-armored gnunet-peer ID as output by gnunet-peerinfo. If this option is not given, the peer will take the \fBBob\fP\'s role.
.B
.IP "\-h, \-\-help"
Print short help on options.
.B
.IP "\-L LOGLEVEL, \-\-loglevel=LOGLEVEL"
Use LOGLEVEL for logging.  Valid values are DEBUG, INFO, WARNING and ERROR.
.B
.IP "\-v, \-\-version"
Print GNUnet version number.


.SH BUGS
Report bugs by using Mantis <https://gnunet.org/bugs/> or by sending electronic mail to <gnunet\-developers@gnu.org>

.SH SEE ALSO
gnunet\-peerinfo(1)
