Implementable right now (but not necessarily important), with caveats
(unavailable components that will limit what can be implemented right
away), in order in which they will likely be done:
* TESTING-TESTBED [Nate]
* SETUP
* DV [Nate]
* TBENCH
* TRACEKIT
* FRAGMENTATION [Ji Lu]
* HTTP transport
* MySQL / Postgres plugins (datastore, datacache) [Radhika]
* UPNP [Milan]

Urgent items (before announcing ng.gnunet.org):
* TEST:
  - topology
  - hostlist
* CORE:
  - soliciting traffic for clients that registered for it is not implemented
    (in the service, client API supports GNUNET_MESSAGE_TYPE_CORE_SOLICIT_TRAFFIC
     but never receives any such messages); how to avoid busy-waiting here
     is a good question (solicit => nothing, when to solicit again???)
* FS (basic anonymous FS only)
  - implement FS service (P2P operations)
    + how to send queries (soliciting is not there in core; do we
      also want to do pushing sometimes?)
    + need to bound queueing of replies for other peers    
  - test multi-peer search/download
* new webpage
  - migrate Mantis, Subversion
  - run peer => have a 0.9.x hostlist
  - improve basic documentation (configure, dependencies, what works, etc.)
  - write minimal welcome/introduction to 0.9.x-development/webpage/status
=> Deploy(able) development network


0.9.0pre0:
* UTIL:
  - load: need way to determine network load (up/down)
  - trust: need *fast* way to check/update trust in peers
           (async peerinfo would not be right)
* Module features to implement:
  - advanced FS API parts
    + namespaces: fundamental namespace API
    + search: SBlocks, KSBlocks, probes, notify FS-service of known results
    + collection
    + location URIs (publish, search, download)
    + persistence support (publish, unindex, search, download)
    + indexing: index-failure-cleanup
    + download: management/bounding of parallel downloads (for recursive dl.)
    + datastore reservation (publishing)
    + gnunet-publish (URI args)
    + gnunet-download (directory)
    + gnunet-search (options, incl. namespace search)
    + gnunet-download (many options)
    + gnunet-directory (man page, options)
    + gnunet-pseudonym (all of it)
    + gnunet-service-fs (remove failing on-demand blocks, many other nitpicks/features/optimizations)
    + datastore: do active migration support here?
  - implement adv. FS testcases 
    + getopt API
    + insert: sblocks, loc uris
    + download: loc uris
    + search: sblocks, skblocks, loc uris
    + namespaces
    + collection
  - implement FS performance tests (needs TESTING)
    + insert
    + download
    + search
    + unindex
  - non-anonymous FS service (needs DHT)
    + basic DHT integration
    + CS-DHT-functions (DHT-put of LOC)
    + P2P-functions (DHT-get)
  - setup (RC-pre0)
    + default generation
    + need to settle basic design; do we want to keep guile?
  - testing (RC-pre0)
    + modify configuration to allow controlling connections for non-local starts
    + testbed creation with topology (needs working F2F topology) [Nate]
    + testbed with churn [Nate]
    + implement library for distributed testing [Nate]
    + implement testcases for distributed testing [Nate]
    + test basic peer re-configure [Nate]
    + test topology creation [Nate]
    + test churn generation [Nate]

0.9.0pre1:
* Module features to implement:
  - tbench (RC-pre1)
    + good to have for DV evaluation!
  - DV (RC-pre1)
    + write DV API 
    + implement DV service [Nate & CG]
    + implement DV library [Nate]
    + implement DV transport plugin [Nate & CG]
    + implement testcases [Nate]
    + implement performance tests [Nate]
* GUIs to implement:
  - gtk (RC-pre1)
    + how to integrate scheduler with GTK event loop!

0.9.0pre2:
* Module features to implement:
  - tracekit (RC-pre2)
    + good to have for DV/DHT evaluation!
  - DHT (RC-pre2)
    + implement DHT service (needs DV, DATACACHE)
    + implement DHT library
    + implement testcases
    + implement performance tests
* GUIs to implement:
  - fuse (RC-pre2)
* Plugins to implement:
  - UDP backend (RC-pre2)
    + Fragmentation library 
    + actual plugin
  - HTTP backend (RC-pre2)

0.9.0pre3:
* GUIs to implement:
  - qt (RC-pre3)
    + see discussions @ FISL about integration with event loop!
* Determine RC bugs and fix those!

0.9.0:
* Documentation
  - update man pages
  - update webpage documentation
* new webpage:
  - expand bibliography
  - convert documentation pages to books
  - update books (especially for developers)
  - create good Drupal theme for GNUnet
  - make a NICE download page and figure out how to 
    enable developers to publish TGZs nicely
  - port "contact" page
  - add content type for "todo" items?
  - DNS activation
* Plugins to implement:
  - MySQL database backends
    + datacache
    + datastore
  - Postgres database backends
    + datacache
    + datastore
  - vpn
* Determine RC bugs and fix those!


0.9.x:
* Plugins to implement:
  - SMTP transport backend
  - HTTPS transport backend
    + improved HTTPS support in MHD
    + actual plugin
* Remove KBlocks in gnunet-unindex (see discussion with Kenneth Almquist on gnunet-devs in 9/2009)
* Allow checking of presence of search results and/or content via command-line tools
  (add options to gnunet-search / gnunet-download to limit search to local peer)
* STATISTICS:
  - should use BIO instead of mmap
