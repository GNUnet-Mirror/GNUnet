0.9.0pre3:
* connections fail if transport-plugin/nat produces 
  some addresses that don't work (enable 'use_localaddr' with bindto for example,
  so that some of the 'local' IPs do not work due to the bindto);  the result
  seems to be that the plugin tries some of the broken addresses, fails and the
  transport-level connection never comes up.
  [still an issue?]
* transport:
  - explicit CONNECT: add timestamp
  - explicit DISCONNECT: add signature
* clean buildbots

0.9.0pre4:
* GNUNET-GTK: [CG]
  - figure out where in the GUI we should show active upload operations and allow aborts
  - handle events:
    + search error
    + publish error
* NAT:
  - support HOSTNAME given for external-IP address (dyndns!)
* FS [CG]
  - implement multi-peer FS performance tests + gauger them!
    + insert
    + download
    + search

0.9.0:
* new webpage:
  - write chapter on DHT/block [Nate] 
  - make a NICE download page 
* big code review
* Determine RC bugs and fix those  (release should have no known real bugs)

0.9.1:
* TRANSPORT: [MW]
  - 'TransmitFunction' requires plugins to have "unbounded" queue (or at least 
    queue of size > 2), might be better to have at MOST one message pending
    per plugin/target and only send the next one after the continuation was
    called (or use 'notify_transmit_ready-style API?)
  - WLAN transport backend [DB]
  - need to periodically probe latency/transport cost changes & possibly switch transport 
    (working ATS)
* DV: 
  - proper bandwidth allocation
  - performance tests
* PEERINFO:	
  - merge multiple HELLOs of the same peer in the transmission queue
    (theoretically reduces overhead; bounds message queue size)
  - merge multiple iteration requests over "all" peers in the queue
    (theoretically reduces overhead; bounds messgae queue size)
* STATISTICS:
  - should use BIO instead of mmap
* FS: [CG]
  - Remove KBlocks in gnunet-unindex (see discussion with Kenneth Almquist on gnunet-devs in 9/2009)
  - use different queue prioritization for probe-downloads vs. normal downloads
  - re-implement gnunet-auto-share
  - implement 'GNUNET_FS_file_information_create_from_directory', avoiding
    code duplication with gnunet-gtk's similar code (!)
* GNUNET-GTK: [CG]
  - add tool bar
  - do meaningful update to status line (starting up, peer running, #connections, shutdown, ...)
  - add progress dialog for 'add_dir_at_iter' scan (can take a while...)
  - NS list in search dialog should use colors to offset our own namespaces from the others
  - right-clicking on NS list in search dialog should open menu that allows 
    * viewing full meta data 
    * deletion of namespace info
  - implement unindex operation (use dialog with all indexed files for selection)
  - finish publish dialog details:
    + normalize keywords (edit subdialog)
  - implement download by URI dialog; figure out where to display those downloads!
  - add combo box to select desired mime type for search
* ARM: [CG]
  - better tracking of which config changes actually need to cause process restarts by ARM.
  - handle gnunet-arm -k in combination with auto-start magic (what is the right thing here?)
  - discover dependencies between services

0.9.2:
* PEERINFO: [NN]
  - expire 'ancient' HELLOs (those without valid addresses AND that 
    we have not 'used' (for their public keys) in a while; need a way
    to track actual 'use')
  - make sue we also trigger notifications whenever HELLOs expire
* WLAN:
  - nice signal strength adjustment [MW]
  - energy cost in ATS [MW]
* BLOCKS:
  - testcase would be nice
* STATISTICS:
  - implement statistics GUI (=> start from gnunet-gtk by button!)
* PEERINFO: [NN]
  - move peerinfo to new GUI (=> start from gnunet-gtk by button!)
  - extend peer dialog with green-yellow-red connectivity status lights
  - extend peer dialog with country flags and names

0.9.3:
* SMTP transport backend:
  - sending (SMTP/SMTPS)
  - receiving (IMAP/IMAPS/POP?)
  - rate limiting
  - improved batching
  - resource limit integration with ATS
* VPN 
  - "DNS" .gnunet [MW]
* MESH:
  - optimized routes (beyond DHT/DV)
