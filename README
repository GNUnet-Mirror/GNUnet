                       Welcome to GNUnet


What is GNUnet?
===============

GNUnet is peer-to-peer framework focusing on security.  The first and
primary application for GNUnet is anonymous file-sharing.  GNUnet is
currently developed by a worldwide group of independent free software
developers.  GNUnet is a part of the GNU project (http://www.gnu.org/).

This is an ALPHA release.  There are known and significant bugs as 
well as many missing features in this release.  

For a longer description of the GNUnet System see our webpages
http://www.gnu.org/software/gnunet/ and https://ng.gnunet.org/.


Dependencies:
=============

For the impatient, here is the list of immediate dependencies for
running GNUnet:

- libextractor  >= 0.6.1
- libmicrohttpd >= 0.4.6
- libgcrypt     >= 1.2
- libgmp        >= 4.0
- libcurl       >= 7.15.4
- libltdl       >= 2.2 (part of GNU libtool)
- sqlite        >= 3.0 (alternative to MySQL)
- mysql         >= ??? (not yet supported)
- postgres      >= ??? (not yet supported)

Recommended autotools for compiling the SVN version are:
- autoconf >= 2.59
- automake >= 1.11.1
- libtool  >= 2.2 

See also README.debian for a list of Debian packages.


How to install?
===============

The fastest way is to use a binary package if it is available for your
system.  For a more detailed description, read the installation
instructions on the webpage at https://ng.gnunet.org/installation.

If you install from source, you need to install GNU libextractor first
(download from http://www.gnu.org/software/libextractor/).  We also
recommend installing GNU libmicrohttpd.  Then you can start the actual
GNUnet compilation process with:

$ ./configure --prefix=$HOME --with-extractor=$HOME
$ make
# make install
# sudo -u gnunet gnunet-setup # (note: does not yet exist!)
# sudo -u gnunet gnunet-arm -s

This will compile and install GNUnet to ~/bin/, ~/lib/ and ~/man/.
gnunet-setup will create the configuration; this step is interactive.
You can run gnunet-setup as root for a system-wide installation or as
a particular user to create a personal installation.  It is
recommended that you add a user "gnunet" to run "gnunet-arm".  You can
then still run the end-user applications as another user.  If you
create a user "gnunet", it is recommended that you edit the
configuration file slightly so that data can be stored in
"/var/lib/gnunet"; you may also want to use "/etc/gnunet.conf" for the
configuration in this case.  

Note that additional, per-user configuration files
(~/.gnunet/gnunet.conf) need to be created by each user (for example,
by running gnunet-setup). For more general information about the GNU
build process read the INSTALL file.

GNUnet requires the GNU MP library (http://www.gnu.org/software/gmp/)
and libgcrypt.  You can specify the path to libgcrypt by passing
"--with-gcrypt=PATH" to configure.  You will also need either sqlite
(version 3 or higher) or MySQL (version 5.0 or higher).

If you are compiling the code from subversion, you have to run
". bootstrap" before ./configure.  If you receive an error during the
running of ". bootstrap" that looks like "macro `AM_PATH_GTK' not
found in library", you may need to run aclocal by hand with the -I
option, pointing to your aclocal m4 macros, i.e.

$ aclocal -I /usr/local/share/aclocal


Configuration
=============

// FIXME: update this section once we have gnunet-setup!  GNUnet uses
two types of configuration files, one for the daemon (called
gnunetd.conf) and one for each user (gnunet.conf).  You can create and
edit these configuration files with the gnunet-setup tool.  The
defaults that are created the first time you run gnunet-setup are
usually ok, you may want to adjust the limitations (space consumption,
bandwidth, etc.) though.  The configuration files are human-readable;
GNUnet's configuration is typically located at
"~/.gnunet/gnunet.conf".

You MUST create "~/.gnunet/gnunet.conf" explicitly before starting
GNUnet, and the recommended way to do this is to run gnunet-setup.
You can also create an empty configuration file, in which case 
default values will be used for everything.

If you want to use a different configuration file, pass the name of
the configuration file as an argument with the option "-c" to any
GNUnet application.


Usage
=====

First, you must obtain an initial list of GNUnet hosts.  Knowing a
single peer is sufficient since after that GNUnet propagates
information about other peers.  Note that the default "gnunet.conf"
contains URLs from where GNUnet downloads an initial hostlist
whenever it is started.  If you want to create an alternative URL for
others to use, the file can be generated on any machine running
GNUnet by periodically executing

$ cat $SERVICEHOME/data/hosts/* > the_file

and offering 'the_file' via your web server.  Alternatively, you can
run the build-in web server by adding '-p' to the OPTIONS value
in the "hostlist" section of gnunet.conf.

If the solution with the URL is not feasible for your situation, you
can also add hosts manually.  Simply copy the hostkeys to
"$SERVICEHOME/data/hosts/" (where $SERVICEHOME is the directory
specified in the /etc/gnunet.conf configuration file).

Now start the local node using "gnunet-arm -s".  GNUnet should run 24/7 if
you want to maximize your anonymity.  

// FIXME: gnunet-gtk is not yet supported in 0.9.x
The GTK user interface is shipped separately from GNUnet.  After
downloading and installing gnunet-gtk, you can invoke the GUI with:

$ gnunet-gtk

// FIXME: gnunet-qt is not yet supported in 0.9.x
For Qt/KDE users, there is also a QT user interface (also shipped 
separately).  If you install gnunet-qt, you can invoke the GUI with:

$ gnunet-qt

If you want to use the shell (part of this distribution), use

$ gnunet-search KEYWORD

This will display a list of results to the console. Then use

$ gnunet-download -o FILENAME GNUNET_URI

to retrieve a file.  The GNUNET_URI is printed by gnunet-search
together with a description.  To publish files on GNUnet, use the
"gnunet-publish" command.

// FIXME: auto-share is not yet supported in 0.9.x
In order to share files, the easiest way is to create a directory
with the files (and directories) that you want to share and run

$ nohup gnunet-auto-share NAME-OF-THE-DIRECTORY &

For further documentation, see our webpage.


Hacking GNUnet
==============

Contributions are welcome, please submit bugs to
https://gnunet.org/bugs/.  Please make sure to run contrib/report.sh
and include the output with your bug reports.  More about how to
report bugs can be found in the GNUnet FAQ on the webpage.  Submit
patches via E-Mail to gnunet-developers@gnu.org.

In order to run the unit tests with "make check", you need to
set an environment variable ("GNUNET_PREFIX") to the directory
where GNUnet is installed (usually, GNUnet will use OS specific
tricks in order to try to figure out the PREFIX, but since the
testcase binaries are not installed, that trick does not work
for them).  Also, before running any testcases, you must
complete the installation first.  Quick summary:

$ ./configure --prefix=$SOMEWHERE
$ make
$ make install
$ export GNUNET_PREFIX=$SOMEWHERE
$ make check

If any testcases fail to pass on your system, run "contrib/report.sh"
and report the output together with information about the failing
testcase to the Mantis bugtracking system at
https://gnunet.org/bugs/.


Running http on port 80
=======================

In order to hide GNUnet's HTTP traffic perfectly, you might consider
running GNUnet's HTTP transport on port 80.  However, you should not
run GNUnet as root.  Instead, forward port 80 to say 8080 with this
command (as root, in your startup scripts):

# iptables -t nat -A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8080

Then set in the HTTP section of gnunetd.conf the "ADVERTISED-PORT"
to "80" and "PORT" to 8080.   You can do the same trick for the
TCP and UDP transports if you want to map them to a priviledged
port (from the point of view of the network).


Running the SMTP transport
==========================

// NOTE: SMTP is not currently available in this version of GNUnet
Running GNUnet over SMTP (e-mail) is a bit more involved.  Note that
you do not need to run all transports (only running the NAT transport
is the only thing that will not work).  If you really want to do
P2P over SMTP, read the instructions at http://gnunet.org/smtp.php3


Stay tuned
==========

* http://www.gnu.org/software/gnunet/
* http://gnunet.org/
* https://gnunet.org/bugs/
* https://ng.gnunet.org/
* http://mail.gnu.org/mailman/listinfo/gnunet-developers
* http://mail.gnu.org/mailman/listinfo/help-gnunet
* http://mail.gnu.org/mailman/listinfo/info-gnunet
* http://mail.gnu.org/mailman/listinfo/gnunet-svn

